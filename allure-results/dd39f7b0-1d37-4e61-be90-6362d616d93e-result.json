{"name": "Проверка захода в личный кабинет", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: Element <p class=\"AppHeader_header__linkText__3q_va ml-2\"> is not clickable at point (1272,44) because another element <div class=\"Modal_modal_overlay__x2ZCr\"> obscures it\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:193:5\nElementClickInterceptedError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:337:5\nwebdriverClickElement@chrome://remote/content/marionette/interaction.sys.mjs:176:11\ninteraction.clickElement@chrome://remote/content/marionette/interaction.sys.mjs:135:11\nclickElement@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:204:29\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:84:31", "trace": "self = <test_login_page.TestPersonalAccount object at 0x10361aac0>\ndriver = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"48f8addb-34ff-4547-8a58-1e7995a692ed\")>\n\n    @allure.title('Проверка захода в личный кабинет')\n    @allure.description('Заходим на страницу логина, вводим email и пароль,'\n                        ' нажимаем кнопку \"Войти\", затем заходим в Личный кабинет')\n    def test_enter_personal_account(self, driver):\n        login_page = LoginPage(driver)\n        login_page.open_page(Urls.LOGIN_PAGE)\n        login_page.wait_for_load_page(Urls.LOGIN_PAGE)\n        login_page.enter_email_on_login_page(UserData.EMAIL)\n        login_page.enter_password_on_login_page(UserData.PASSWORD)\n        login_page.click_element(login_page.LOGIN_BUTTON)\n        login_page.wait_for_load_page(Urls.MAIN_PAGE)\n>       login_page.click_element(login_page.PERSONAL_ACCOUNT_LINK)\n\ntests/test_login_page.py:49: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages/base_page.py:59: in click_element\n    element.click()\nvenv/lib/python3.9/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\nvenv/lib/python3.9/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\nvenv/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x103540fa0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"Element <p class=\\\\\"AppHeader_heade...sys.mjs:204:29\\\\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:84:31\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: Element <p class=\"AppHeader_header__linkText__3q_va ml-2\"> is not clickable at point (1272,44) because another element <div class=\"Modal_modal_overlay__x2ZCr\"> obscures it\nE       Stacktrace:\nE       RemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nE       WebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:193:5\nE       ElementClickInterceptedError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:337:5\nE       webdriverClickElement@chrome://remote/content/marionette/interaction.sys.mjs:176:11\nE       interaction.clickElement@chrome://remote/content/marionette/interaction.sys.mjs:135:11\nE       clickElement@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:204:29\nE       receiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:84:31\n\nvenv/lib/python3.9/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException"}, "description": "Заходим на страницу логина, вводим email и пароль, нажимаем кнопку \"Войти\", затем заходим в Личный кабинет", "steps": [{"name": "Открываем страницу", "status": "passed", "parameters": [{"name": "url", "value": "'https://stellarburgers.nomoreparties.site/login'"}], "start": 1718232512557, "stop": 1718232512781}, {"name": "Дожидаемся загрузки страницы", "status": "passed", "parameters": [{"name": "url", "value": "'https://stellarburgers.nomoreparties.site/login'"}], "start": 1718232512781, "stop": 1718232512783}, {"name": "Вводим email в инпут на странице логина", "status": "passed", "steps": [{"name": "Вводим текст в инпут", "status": "passed", "steps": [{"name": "Найти на странице элемент", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//input[@class=\"text input__textfield text_type_main-default\"]')"}], "start": 1718232512783, "stop": 1718232512813}], "parameters": [{"name": "locator", "value": "('xpath', '//input[@class=\"text input__textfield text_type_main-default\"]')"}, {"name": "text", "value": "'Ivanbelov_diplom@gmail.com'"}], "start": 1718232512783, "stop": 1718232512926}], "parameters": [{"name": "text", "value": "'Ivanbelov_diplom@gmail.com'"}], "start": 1718232512783, "stop": 1718232512926}, {"name": "Вводим пароль в инпут на странице логина", "status": "passed", "steps": [{"name": "Вводим текст в инпут", "status": "passed", "steps": [{"name": "Найти на странице элемент", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//div[@class=\"input pr-6 pl-6 input_type_password input_size_default\"]/input[@class=\"text input__textfield text_type_main-default\" and @type=\"password\" and @name=\"Пароль\"]')"}], "start": 1718232512926, "stop": 1718232512948}], "parameters": [{"name": "locator", "value": "('xpath', '//div[@class=\"input pr-6 pl-6 input_type_password input_size_default\"]/input[@class=\"text input__textfield text_type_main-default\" and @type=\"password\" and @name=\"Пароль\"]')"}, {"name": "text", "value": "'Onlyforyoumyfriend'"}], "start": 1718232512926, "stop": 1718232512983}], "parameters": [{"name": "text", "value": "'Onlyforyoumyfriend'"}], "start": 1718232512926, "stop": 1718232512983}, {"name": "Кликаем по элементу", "status": "passed", "steps": [{"name": "Найти на странице элемент", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//button[contains(@class, \"button_button_type_primary\") and contains(@class, \"button_button_size_medium\") and text()=\"Войти\"]')"}], "start": 1718232512984, "stop": 1718232512998}], "parameters": [{"name": "locator", "value": "('xpath', '//button[contains(@class, \"button_button_type_primary\") and contains(@class, \"button_button_size_medium\") and text()=\"Войти\"]')"}], "start": 1718232512984, "stop": 1718232513217}, {"name": "Дожидаемся загрузки страницы", "status": "passed", "parameters": [{"name": "url", "value": "'https://stellarburgers.nomoreparties.site/'"}], "start": 1718232513217, "stop": 1718232513219}, {"name": "Кликаем по элементу", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: Element <p class=\"AppHeader_header__linkText__3q_va ml-2\"> is not clickable at point (1272,44) because another element <div class=\"Modal_modal_overlay__x2ZCr\"> obscures it\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:193:5\nElementClickInterceptedError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:337:5\nwebdriverClickElement@chrome://remote/content/marionette/interaction.sys.mjs:176:11\ninteraction.clickElement@chrome://remote/content/marionette/interaction.sys.mjs:135:11\nclickElement@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:204:29\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:84:31\n\n", "trace": "  File \"/Users/ivanbelov/PycharmProjects/Diplom/Diplom_3/venv/lib/python3.9/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/Users/ivanbelov/PycharmProjects/Diplom/Diplom_3/pages/base_page.py\", line 59, in click_element\n    element.click()\n  File \"/Users/ivanbelov/PycharmProjects/Diplom/Diplom_3/venv/lib/python3.9/site-packages/selenium/webdriver/remote/webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/Users/ivanbelov/PycharmProjects/Diplom/Diplom_3/venv/lib/python3.9/site-packages/selenium/webdriver/remote/webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n  File \"/Users/ivanbelov/PycharmProjects/Diplom/Diplom_3/venv/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"/Users/ivanbelov/PycharmProjects/Diplom/Diplom_3/venv/lib/python3.9/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "steps": [{"name": "Найти на странице элемент", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//p[contains(@class, \"AppHeader_header__linkText__3q_va\") and contains(@class, \"ml-2\") and text()=\"Личный Кабинет\"]')"}], "start": 1718232513220, "stop": 1718232513231}], "parameters": [{"name": "locator", "value": "('xpath', '//p[contains(@class, \"AppHeader_header__linkText__3q_va\") and contains(@class, \"ml-2\") and text()=\"Личный Кабинет\"]')"}], "start": 1718232513220, "stop": 1718232513235}], "parameters": [{"name": "driver", "value": "'firefox'"}], "start": 1718232512556, "stop": 1718232513236, "uuid": "e065bd94-5af4-4157-b606-359f8eaef99f", "historyId": "6e4db80fd1915d8a348827b3f5edf69d", "testCaseId": "b9d24093c8623bfaabd022d216f185f8", "fullName": "tests.test_login_page.TestPersonalAccount#test_enter_personal_account", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_login_page"}, {"name": "subSuite", "value": "TestPersonalAccount"}, {"name": "host", "value": "MacBook-Pro-Ivan-4.local"}, {"name": "thread", "value": "5588-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_login_page"}]}